[gcode_macro lights_on]
gcode:
    SET_LED LED=case WHITE=1.0 RED=1.0 GREEN=1.0 BLUE=1.0
[gcode_macro lights_off]
gcode:
    SET_LED LED=case WHITE=0.0
    
[gcode_macro check_x_beam]
gcode:
    SET_VELOCITY_LIMIT ACCEL=500
    G0 Z10 F3000
    G0 X10 Y110 F6000
    PROBE
    G0 Z10 F3000
    G0 X240 Y110 F6000
    PROBE   

[gcode_macro vibration_test]
gcode:
		# Set variables for axis centers
		{% set midx = printer.configfile.config.stepper_x.position_max|float / 2 %}
		{% set midy = printer.configfile.config.stepper_y.position_max|float / 2 %}
		
		#X Vibration - Stock
		G1 X{ midx - 75 } Y{ midy } Z20 F10000
		M400
		G4 P300
		ACCELEROMETER_MEASURE CHIP=hotend RATE=3200 
		G4 P300
		G1 X{ midx + 75 } Y{ midy } F10000
		G1 X{ midx - 75 } Y{ midy } F10000
		G1 X{ midx + 75 } Y{ midy } F10000
		M400
		G4 P300
		ACCELEROMETER_MEASURE CHIP=hotend RATE=0

		#Y Vibration - Stock
		G1 X{ midx } Y{ midy - 75 } Z20 F10000
		M400
		G4 P300
		ACCELEROMETER_MEASURE CHIP=bed RATE=3200
		G4 P300
		G1 X{ midx } Y{ midy + 75 } F10000
		G1 X{ midx } Y{ midy - 75 } F10000
		G1 X{ midx } Y{ midy + 75 } F10000
		M400
		G4 P300
		ACCELEROMETER_MEASURE CHIP=bed RATE=0 

[gcode_macro vibration_vs_speed_x]
gcode:
    # Set variables for axis centers
    {% set midx = printer.configfile.config.stepper_x.position_max|float / 2 %}
    {% set midy = printer.configfile.config.stepper_y.position_max|float / 2 %}
    
    #X Vibration - Stock
    G1 X{ midx - 75 } Y{ midy } Z20 F10000
    M400
    G4 P300

    {% for speed in [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200] %}
        {% for smallsteps in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] %}
            MEASURE_AXES_NOISE_DURING_TRAVEL XSTART={ midx - 75 } XEND={ midx + 75 } MEASURESPEED={ speed + smallsteps } MOVESPEED=200
        {% endfor %}
    {% endfor %}

[gcode_macro tune_tmc_xz]
gcode:
    # Set variables for axis centers
    {% set midx = printer.configfile.config.stepper_x.position_max|float / 2 %}
    {% set midy = printer.configfile.config.stepper_y.position_max|float / 2 %}
    
    #X Vibration - Stock
    G1 X{ midx - 75 } Y{ midy } Z20 F10000
    M400
    G4 P300

    {% for tbl in [0, 1, 2, 3] %}
        {% for toff in [3, 4, 5, 6, 7, 8] %}
            {% for hstrt in [0, 1, 2, 3, 4, 5, 6, 7] %}
                {% for hend in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] %}
                    SET_TMC_FIELD STEPPER=stepper_x FIELD=TBL VALUE={ tbl }
                    SET_TMC_FIELD STEPPER=stepper_x FIELD=TOFF VALUE={ toff }
                    SET_TMC_FIELD STEPPER=stepper_x FIELD=HSTRT VALUE={ hstrt }
                    SET_TMC_FIELD STEPPER=stepper_x FIELD=HEND VALUE={ hend }

                    SET_TMC_FIELD STEPPER=stepper_z FIELD=TBL VALUE={ tbl }
                    SET_TMC_FIELD STEPPER=stepper_z FIELD=TOFF VALUE={ toff }
                    SET_TMC_FIELD STEPPER=stepper_z FIELD=HSTRT VALUE={ hstrt }
                    SET_TMC_FIELD STEPPER=stepper_z FIELD=HEND VALUE={ hend }

                    M117 tbl,{tbl},toff,{toff},hstrt,{hstrt},hend,{hend},

                    MEASURE_AXES_NOISE_DURING_TRAVEL XSTART={ midx - 75 } XEND={ midx + 75 } MEASURESPEED=72 MOVESPEED=200 TBL={ tbl } TOFF={ toff } HSTRT={ hstrt } HEND={ hend }
                {% endfor %}
            {% endfor %}
        {% endfor %}
    {% endfor %}

    {% for speed in [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200] %}
        {% for smallsteps in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] %}
            
        {% endfor %}
    {% endfor %}

[idle_timeout]
gcode:
  TURN_OFF_HEATERS
  DISABLE_MOTORS
timeout: 1800

[gcode_macro MEASURE_RESONNANCES_X]
gcode: 
    RESPOND PREFIX= MSG="Homing"
    G28
    Dock_probe
    RESPOND PREFIX= MSG="Measuring resonnances on X Axis"
    SHAPER_CALIBRATE AXIS=X
    Park_toolhead

[gcode_macro MEASURE_RESONNANCES_Y]
gcode: 
    RESPOND PREFIX= MSG="Homing"
    G28
    Dock_probe
    RESPOND PREFIX= MSG="Measuring resonnances on Y Axis"
    SHAPER_CALIBRATE AXIS=Y
    Park_toolhead

[gcode_macro PROBE_POINT]
gcode:
    Attach_probe
    PROBE samples=3 SAMPLE_RETRACT_DIST=1
    G0 Z4 F9000

[gcode_macro Screws_tilt]
gcode:
    {% set travel_speed = printer["gcode_macro GlobalVariables"].travel_speed %}
    {% set home_x = printer["gcode_macro GlobalVariables"].home_x %}
    {% set probe_x_offset = printer["gcode_macro GlobalVariables"].probe_x_offset %}
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}

    # Start bed heating and wait
    RESPOND PREFIX= MSG="Waiting for bed temperature..."
    M140 S{BED_TEMP}
    {% if printer.toolhead.homed_axes != 'xyz' %}
		G28	             #Home All Axes
	{% endif %}
    G4 P15000
    M190 S{BED_TEMP}
    Attach_probe
    SCREWS_TILT_CALCULATE samples=3
    G1 X{ home_x - probe_x_offset } Y230 Z200 F{ travel_speed }

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
default_parameter_X: 230
default_parameter_Y: 230
default_parameter_Z: 10
gcode:
    M104 S0
    M140 S0
    M106 S0
    CLEAR_PAUSE
    BASE_CANCEL_PRINT
    Park_toolhead
    SDCARD_RESET_FILE
    BED_MESH_CLEAR

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 230
default_parameter_Y: 230
default_parameter_Z: 10
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-1.7 F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000
    G91

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    G91
    G1 E1.7 F2100
    G91
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro DISABLE_MOTORS]
gcode:
    M18

[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

[gcode_macro change_filament]
default_parameter_X: 55
default_parameter_Y: -15
default_parameter_Z: 30
default_parameter_E: -100

gcode:
    {% set EXTRUDER = params.EXTRUDER|default(235)|float %}

    M104 S{EXTRUDER}     #set hotend temperature and wait
    {% if printer.toolhead.homed_axes != 'xyz' %}
		G28	             #Home All Axes
	{% endif %}

    G0 X{X} Y{Y} Z{Z}    #move to area where you can easily load filament
    M109 S{EXTRUDER}     
    M83                  #relative positioning on extruder
    G0 E15 F400          #extrude filament to get better blob on end
    G0 E-100 F1000       #unload filament
    G4 P15000            #wait for filament change 30 seconds
    RESPOND PREFIX= MSG="15 seconds left"
    G4 P15000
    G92 E0
    M83                  #relative positioning on extruder    
    G0 E150 F400         #prime extruder
    G92 E0

[gcode_macro M600]
gcode:
  PAUSE

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool: 
# https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}